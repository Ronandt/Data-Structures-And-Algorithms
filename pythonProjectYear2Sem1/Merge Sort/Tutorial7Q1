
Definition of Divide & Conquer Strategy:

The divide and conquer approach divides a problem into smaller subproblems;
these subproblems are further solved recursively.
The result of each subproblem is not stored for future reference, whereas, in a dynamic approach,
the result of each subproblem is stored for future reference.

Advantages of Divide and Conquer Algorithm

    - The complexity for the multiplication of two matrices using the naive method is O(n3),
      whereas using the divide and conquer approach (i.e. Strassen's matrix multiplication) is O(n2.8074).
      This approach also simplifies other problems, such as the Tower of Hanoi.

    - This approach is suitable for multiprocessing systems.

    - It makes efficient use of memory caches.

Sort Algorithms that use the divide and Conquer Strategy are Merge Sort and Quick Sort

How merge and quick sort uses the divide and conquer strategy:

Both merge sort and quicksort employ a common algorithmic paradigm based on recursion.
This paradigm, divide-and-conquer, breaks a problem into subproblems that are similar to the original problem,
recursively solves the subproblems, and finally combines the solutions to the subproblems to solve the original problem.


School Definition

Divide and Conquer is a strategy also commonly described as an algorithmic paradigm that is based on recursion and works by"
 - Recursively breaking down a problem into two or more sub-problems, until these become simple enough to be solved directly
 - The solutions to the sub-problems are then combined to give a solution to the original problem

For example, in the Merge Sort algorithm, an input list S with n elemenets is sorted in the following steps:

- Divide: partition S into two sublists S1 and S2 about n/2 elements each
- Recur: Recursively sort S1 and S2
- Conquer: merge S1 and S2 into a sorted list

